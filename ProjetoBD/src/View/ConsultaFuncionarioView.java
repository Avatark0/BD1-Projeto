/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.Conexao;
import Model.Usuario;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class ConsultaFuncionarioView extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaFuncionarioView
     */
    public ConsultaFuncionarioView() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        botaoMedico = new javax.swing.JRadioButton();
        botaoEnfermeiro = new javax.swing.JRadioButton();
        botaoNutricionista = new javax.swing.JRadioButton();
        CRMCheckBox = new javax.swing.JCheckBox();
        EspecializacaoCheckBox = new javax.swing.JCheckBox();
        CorenCheckBox = new javax.swing.JCheckBox();
        CRNCheckBox = new javax.swing.JCheckBox();
        NomeCheckBox = new javax.swing.JCheckBox();
        TelefoneCheckBox = new javax.swing.JCheckBox();
        CPFCheckBox = new javax.swing.JCheckBox();
        CidadeCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        CRMExibirCheckBox = new javax.swing.JCheckBox();
        EspecializacaoExibirCheckBox = new javax.swing.JCheckBox();
        NomeExibirCheckBox = new javax.swing.JCheckBox();
        CPFExibirCheckBox = new javax.swing.JCheckBox();
        CorenExibirCheckBox = new javax.swing.JCheckBox();
        CRNExibirCheckBox = new javax.swing.JCheckBox();
        TelefoneExibirCheckBox = new javax.swing.JCheckBox();
        CidadeExibirCheckBox = new javax.swing.JCheckBox();
        CRMTextField = new javax.swing.JTextField();
        EspecializacaoTextField = new javax.swing.JTextField();
        NomeTextField = new javax.swing.JTextField();
        CorenTextField = new javax.swing.JTextField();
        CRNTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TelefoneTextField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CidadeTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        CPFTextField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonGroup1.add(botaoMedico);
        botaoMedico.setSelected(true);
        botaoMedico.setText("Médico");
        botaoMedico.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botaoMedicoStateChanged(evt);
            }
        });
        botaoMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMedicoActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoEnfermeiro);
        botaoEnfermeiro.setText("Enfermeiro");
        botaoEnfermeiro.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                botaoEnfermeiroStateChanged(evt);
            }
        });
        botaoEnfermeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEnfermeiroActionPerformed(evt);
            }
        });
        botaoEnfermeiro.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                botaoEnfermeiroPropertyChange(evt);
            }
        });

        buttonGroup1.add(botaoNutricionista);
        botaoNutricionista.setText("Nutricionista");
        botaoNutricionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNutricionistaActionPerformed(evt);
            }
        });

        CRMCheckBox.setText("CRM");
        CRMCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRMCheckBoxActionPerformed(evt);
            }
        });

        EspecializacaoCheckBox.setText("Especialização");
        EspecializacaoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EspecializacaoCheckBoxActionPerformed(evt);
            }
        });

        CorenCheckBox.setText("Coren");
        CorenCheckBox.setEnabled(false);
        CorenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorenCheckBoxActionPerformed(evt);
            }
        });

        CRNCheckBox.setText("CRN");
        CRNCheckBox.setEnabled(false);
        CRNCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRNCheckBoxActionPerformed(evt);
            }
        });

        NomeCheckBox.setText("Nome");
        NomeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeCheckBoxActionPerformed(evt);
            }
        });

        TelefoneCheckBox.setText("Telefone");
        TelefoneCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelefoneCheckBoxActionPerformed(evt);
            }
        });

        CPFCheckBox.setText("CPF");
        CPFCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPFCheckBoxActionPerformed(evt);
            }
        });

        CidadeCheckBox.setText("Cidade");
        CidadeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CidadeCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botaoMedico)
                        .addGap(18, 18, 18)
                        .addComponent(botaoEnfermeiro))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CRMCheckBox)
                        .addGap(30, 30, 30)
                        .addComponent(CorenCheckBox))
                    .addComponent(EspecializacaoCheckBox)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NomeCheckBox)
                        .addGap(27, 27, 27)
                        .addComponent(TelefoneCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CPFCheckBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CRNCheckBox)
                    .addComponent(botaoNutricionista)
                    .addComponent(CidadeCheckBox))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoMedico)
                    .addComponent(botaoEnfermeiro)
                    .addComponent(botaoNutricionista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRMCheckBox)
                    .addComponent(CorenCheckBox)
                    .addComponent(CRNCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EspecializacaoCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeCheckBox)
                    .addComponent(TelefoneCheckBox)
                    .addComponent(CidadeCheckBox)
                    .addComponent(CPFCheckBox)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Exibir", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        CRMExibirCheckBox.setText("CRM");

        EspecializacaoExibirCheckBox.setText("Especialização");

        NomeExibirCheckBox.setText("Nome");

        CPFExibirCheckBox.setText("CPF");

        CorenExibirCheckBox.setText("Coren");
        CorenExibirCheckBox.setEnabled(false);

        CRNExibirCheckBox.setText("CRN");
        CRNExibirCheckBox.setEnabled(false);

        TelefoneExibirCheckBox.setText("Telefone");

        CidadeExibirCheckBox.setText("Cidade");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(EspecializacaoExibirCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CPFExibirCheckBox)
                            .addComponent(NomeExibirCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(CidadeExibirCheckBox)
                                .addGap(8, 8, 8))
                            .addComponent(TelefoneExibirCheckBox, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(CRMExibirCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CorenExibirCheckBox)
                        .addGap(2, 2, 2)
                        .addComponent(CRNExibirCheckBox)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRMExibirCheckBox)
                    .addComponent(CorenExibirCheckBox)
                    .addComponent(CRNExibirCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EspecializacaoExibirCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeExibirCheckBox)
                    .addComponent(TelefoneExibirCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CPFExibirCheckBox)
                    .addComponent(CidadeExibirCheckBox)))
        );

        CRMTextField.setEnabled(false);

        EspecializacaoTextField.setEnabled(false);

        NomeTextField.setEnabled(false);

        CorenTextField.setEnabled(false);

        CRNTextField.setEnabled(false);

        jLabel1.setText("CRM:");

        jLabel2.setText("Especialização:");

        jLabel3.setText("Nome:");

        jLabel4.setText("Coren:");

        jLabel5.setText("CRN:");

        try {
            TelefoneTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TelefoneTextField.setEnabled(false);

        jLabel6.setText("Telefone:");

        jLabel7.setText("CPF:");

        jLabel8.setText("Cidade:");

        CidadeTextField.setEnabled(false);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        try {
            CPFTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CPFTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TelefoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EspecializacaoTextField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CRMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CidadeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CorenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(CRNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(CPFTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CRMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(CorenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(CRNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EspecializacaoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(CidadeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TelefoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(CPFTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoMedicoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botaoMedicoStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoMedicoStateChanged

    private void botaoMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMedicoActionPerformed
        CorenCheckBox.setEnabled(false);
        CRMCheckBox.setEnabled(true);
        EspecializacaoCheckBox.setEnabled(true);
        CRNCheckBox.setEnabled(false);
        CRMExibirCheckBox.setEnabled(true);
        EspecializacaoExibirCheckBox.setEnabled(true);
        CorenExibirCheckBox.setEnabled(false);
        CRNExibirCheckBox.setEnabled(false);
        CorenCheckBox.setSelected(false);
        CRNCheckBox.setSelected(false);
        CorenExibirCheckBox.setSelected(false);
        CRNExibirCheckBox.setSelected(false);
        CorenTextField.setEnabled(false);
        CRNTextField.setEnabled(false);
        CRMTextField.setEnabled(true);
        EspecializacaoTextField.setEnabled(true);
    }//GEN-LAST:event_botaoMedicoActionPerformed

    private void botaoEnfermeiroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botaoEnfermeiroStateChanged

    }//GEN-LAST:event_botaoEnfermeiroStateChanged

    private void botaoEnfermeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEnfermeiroActionPerformed
        CorenCheckBox.setEnabled(true);
        CRMCheckBox.setEnabled(false);
        EspecializacaoCheckBox.setEnabled(false);
        CRNCheckBox.setEnabled(false);
        CRMExibirCheckBox.setEnabled(false);
        EspecializacaoExibirCheckBox.setEnabled(false);
        CorenExibirCheckBox.setEnabled(true);
        CRNExibirCheckBox.setEnabled(false);
        CRNCheckBox.setSelected(false);
        CRMCheckBox.setSelected(false);
        EspecializacaoCheckBox.setSelected(false);
        CRMExibirCheckBox.setSelected(false);
        EspecializacaoExibirCheckBox.setSelected(false);
        CRNExibirCheckBox.setSelected(false);
        CorenTextField.setEnabled(true);
        CRNTextField.setEnabled(false);
        CRMTextField.setEnabled(false);
        EspecializacaoTextField.setEnabled(false);
    }//GEN-LAST:event_botaoEnfermeiroActionPerformed

    private void botaoEnfermeiroPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_botaoEnfermeiroPropertyChange

    }//GEN-LAST:event_botaoEnfermeiroPropertyChange

    private void botaoNutricionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNutricionistaActionPerformed
        CorenCheckBox.setEnabled(false);
        CRMCheckBox.setEnabled(false);
        EspecializacaoCheckBox.setEnabled(false);
        CRNCheckBox.setEnabled(true);
        CRMExibirCheckBox.setEnabled(false);
        EspecializacaoExibirCheckBox.setEnabled(false);
        CorenExibirCheckBox.setEnabled(false);
        CRNExibirCheckBox.setEnabled(true);
        CRMCheckBox.setSelected(false);
        EspecializacaoCheckBox.setSelected(false);
        CorenCheckBox.setSelected(false);
        CRMExibirCheckBox.setSelected(false);
        EspecializacaoExibirCheckBox.setSelected(false);
        CorenExibirCheckBox.setSelected(false);
        CorenTextField.setEnabled(false);
        CRNTextField.setEnabled(true);
        CRMTextField.setEnabled(false);
        EspecializacaoTextField.setEnabled(false);
    }//GEN-LAST:event_botaoNutricionistaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ImageIcon icon = new ImageIcon("src/View/Imagens/searchIcon.png");
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ResultSet rs = null;
        String colunas = "";
        if (CPFExibirCheckBox.isSelected()) {
            colunas = colunas + "cpf as CPF,";
        }
        if (NomeExibirCheckBox.isSelected()) {
            colunas = colunas + "nome as Nome,";
        }
        if (CidadeExibirCheckBox.isSelected()) {
            colunas = colunas + "cidade as Cidade,";
        }
        if (TelefoneExibirCheckBox.isSelected()) {
            colunas = colunas + "telefone as Telefone,";
        }
        /* if(CRMCheckBox.isSelected())
            colunas = colunas + "crm as CRM,";
        if(EspecializacaoCheckBox.isSelected())
            colunas = colunas + "especializacao as Especialização,";
        if(CorenCheckBox.isSelected())
            colunas = colunas + "coren as Coren,";
        if(CRNCheckBox.isSelected())
            colunas = colunas + "crn as CRN,";*/
        if(colunas.length()==0)
            colunas = colunas + "cpf as CPF,";
        colunas = colunas.substring(0, colunas.length() - 1); // elimina a ultima virgula
        String sql = "SELECT " + colunas + " FROM pessoa ";
        String busca = "";

        if (CPFCheckBox.isSelected() || NomeCheckBox.isSelected() || CidadeCheckBox.isSelected() || TelefoneCheckBox.isSelected()
                || EspecializacaoCheckBox.isSelected() || CRMCheckBox.isSelected() || CorenCheckBox.isSelected() || CRNCheckBox.isSelected()) {
            sql = sql + "WHERE";
            if (CPFCheckBox.isSelected()) {
                if (CPFTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " cpf = '" + CPFTextField.getText() + "' and";
            }
            if (NomeCheckBox.isSelected()) {
                if (NomeTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " nome = '" + NomeTextField.getText() + "' and";
            }
            if (CidadeCheckBox.isSelected()) {
                if (CidadeTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " cidade = '" + CidadeTextField.getText() + "' and";
            }
            if (TelefoneCheckBox.isSelected()) {
                if (TelefoneTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " telefone = '" + TelefoneTextField.getText() + "' and";
            }
            if (CRMCheckBox.isSelected()) {
                if (CRMTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " CRM = '" + CRMTextField.getText() + "' and";
            }
            if (EspecializacaoCheckBox.isSelected()) {
                if (EspecializacaoTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " especializacao = '" + EspecializacaoTextField.getText() + "' and";
            }
            if (CorenCheckBox.isSelected()) {
                if (CorenTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " coren = '" + CorenTextField.getText() + "' and";
            }
            if (CRNCheckBox.isSelected()) {
                if (CRNTextField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                busca = busca + " crn = '" + CRNTextField.getText() + "' and";
            }
            busca = busca.substring(0, busca.length() - 3); // remove ultimo and
            sql = sql + busca;
        }
        try {
            Connection conexao = new Conexao().getConnection();
            PreparedStatement statement = conexao.prepareStatement(sql);
            montaArrayList(statement);
            /* statement.execute();
            ResultSet resultSet = statement.getResultSet();
            while (resultSet.next()) {
                String cidade = resultSet.getString("cidade");
                
                System.out.println(cidade);
            }*/

            statement.close();
            JOptionPane.showMessageDialog(null, "Consulta realizada com sucesso!", "Consulta", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroFuncionarioView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível  realizar a consulta!\n" + ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        //MostraConsultaFuncionarioView mostraConsultaFuncionario = new MostraConsultaFuncionarioView();
        // mostraConsultaFuncionario.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private ArrayList<ArrayList<String>> montaArrayList(PreparedStatement statement) throws SQLException {
        ArrayList<ArrayList<String>> arrayList = new ArrayList<ArrayList<String>>();
        statement.execute();
        ResultSet resultSet = statement.getResultSet();
        ArrayList<String> pessoaComDadosDoBanco = new ArrayList<>();
        String cpf = "";
        String nome = "";
        String telefone = "";
        String cidade = "";
        String CRM = "";
        String CRN = "";
        String Coren = "";
        String Especializacao = "";
        
        while (resultSet.next()) {
            if (CPFCheckBox.isSelected()) {
                cpf = resultSet.getString("cpf");
                pessoaComDadosDoBanco.add(cpf);  
            }
            if (NomeCheckBox.isSelected()) {
                nome = resultSet.getString("nome");
                pessoaComDadosDoBanco.add(nome);
            }
            if (TelefoneCheckBox.isSelected()) {
                telefone = resultSet.getString("telefone");
                pessoaComDadosDoBanco.add(telefone);
            }
            if (CidadeCheckBox.isSelected()) {
                cidade = resultSet.getString("cidade");
                pessoaComDadosDoBanco.add(cidade);
            }
            if (CRMCheckBox.isSelected()) {
                CRM = resultSet.getString("crm");
                pessoaComDadosDoBanco.add(CRM);
            }
            if (CorenCheckBox.isSelected()) {
                Coren = resultSet.getString("coren");
                pessoaComDadosDoBanco.add(Coren);
            }
            if (EspecializacaoCheckBox.isSelected()) {
                Especializacao = resultSet.getString("especializacao");
                pessoaComDadosDoBanco.add(Especializacao);
            }
            if (CRNCheckBox.isSelected()) {
                CRN = resultSet.getString("crn");
                pessoaComDadosDoBanco.add(CRN);
            }
            
            String dadosPrint = "";
            
            for(int i = 0; i < pessoaComDadosDoBanco.size(); i++){
                dadosPrint = dadosPrint + pessoaComDadosDoBanco.get(i) + "\n";
            }
            
            JOptionPane.showMessageDialog(null, dadosPrint );
            //JOptionPane.showMessageDialog(null, dadosPrint, "Consulta", JOptionPane.INFORMATION_MESSAGE);
            /*
            System.out.println(pessoaComDadosDoBanco.get(0));

            
            System.out.println("nomeadicionado");
            System.out.println(pessoaComDadosDoBanco.get(1));

            
            System.out.println("telefone adicionado");
            System.out.println(pessoaComDadosDoBanco.get(2));

            
            System.out.println("cidade adicionada");
            System.out.println(pessoaComDadosDoBanco.get(3));
            */
        }
        return arrayList;
    }

    private void CRMCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRMCheckBoxActionPerformed
        if (CRMCheckBox.isSelected())
            CRMTextField.setEnabled(true);
        else
            CRMTextField.setEnabled(false);
    }//GEN-LAST:event_CRMCheckBoxActionPerformed

    private void EspecializacaoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EspecializacaoCheckBoxActionPerformed
        if (EspecializacaoCheckBox.isSelected())
            EspecializacaoTextField.setEnabled(true);
        else
            EspecializacaoTextField.setEnabled(false);
    }//GEN-LAST:event_EspecializacaoCheckBoxActionPerformed

    private void NomeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeCheckBoxActionPerformed
        if (NomeCheckBox.isSelected())
            NomeTextField.setEnabled(true);
        else
            NomeTextField.setEnabled(false);
    }//GEN-LAST:event_NomeCheckBoxActionPerformed

    private void TelefoneCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelefoneCheckBoxActionPerformed
        if (TelefoneCheckBox.isSelected())
            TelefoneTextField.setEnabled(true);
        else
            TelefoneTextField.setEnabled(false);
    }//GEN-LAST:event_TelefoneCheckBoxActionPerformed

    private void CorenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorenCheckBoxActionPerformed
        if (CorenCheckBox.isSelected())
            CorenTextField.setEnabled(true);
        else
            CorenTextField.setEnabled(false);
    }//GEN-LAST:event_CorenCheckBoxActionPerformed

    private void CRNCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRNCheckBoxActionPerformed
        if (CRNCheckBox.isSelected())
            CRNTextField.setEnabled(true);
        else
            CRNTextField.setEnabled(false);
    }//GEN-LAST:event_CRNCheckBoxActionPerformed

    private void CidadeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CidadeCheckBoxActionPerformed
        if (CidadeCheckBox.isSelected())
            CidadeTextField.setEnabled(true);
        else
            CidadeTextField.setEnabled(false);
    }//GEN-LAST:event_CidadeCheckBoxActionPerformed

    private void CPFCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPFCheckBoxActionPerformed
        if (CPFCheckBox.isSelected())
            CPFTextField.setEnabled(true);
        else
            CPFTextField.setEnabled(false);
    }//GEN-LAST:event_CPFCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaFuncionarioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaFuncionarioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaFuncionarioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaFuncionarioView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaFuncionarioView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CPFCheckBox;
    private javax.swing.JCheckBox CPFExibirCheckBox;
    private javax.swing.JFormattedTextField CPFTextField;
    private javax.swing.JCheckBox CRMCheckBox;
    private javax.swing.JCheckBox CRMExibirCheckBox;
    private javax.swing.JTextField CRMTextField;
    private javax.swing.JCheckBox CRNCheckBox;
    private javax.swing.JCheckBox CRNExibirCheckBox;
    private javax.swing.JTextField CRNTextField;
    private javax.swing.JCheckBox CidadeCheckBox;
    private javax.swing.JCheckBox CidadeExibirCheckBox;
    private javax.swing.JTextField CidadeTextField;
    private javax.swing.JCheckBox CorenCheckBox;
    private javax.swing.JCheckBox CorenExibirCheckBox;
    private javax.swing.JTextField CorenTextField;
    private javax.swing.JCheckBox EspecializacaoCheckBox;
    private javax.swing.JCheckBox EspecializacaoExibirCheckBox;
    private javax.swing.JTextField EspecializacaoTextField;
    private javax.swing.JCheckBox NomeCheckBox;
    private javax.swing.JCheckBox NomeExibirCheckBox;
    private javax.swing.JTextField NomeTextField;
    private javax.swing.JCheckBox TelefoneCheckBox;
    private javax.swing.JCheckBox TelefoneExibirCheckBox;
    private javax.swing.JFormattedTextField TelefoneTextField;
    private javax.swing.JRadioButton botaoEnfermeiro;
    private javax.swing.JRadioButton botaoMedico;
    private javax.swing.JRadioButton botaoNutricionista;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
